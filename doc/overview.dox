
/**
@page overview Overview

@section Class Hierarchy

The dash object hierarchy provides two classes to create directed acyclic graphs
(DAG) of objects, Node and Attribute. The Node forms the DAG by having parent
and child nodes and holds data through attributes. An Attribute stores a value
of boost::any-like construct. This tree structure is chosen over a flat object
hierarchy to allow automatic mapping of object hierarchies on other context, or
in the case of codash, other nodes.

The core of the data storage relies on lock-free vectors and atomic variables to
store pointer tables and per-item context counts. The internal ContextPtr is a
template class managing the access and copy-on-write of the context-specific
data.

DASH does not provide a way to name children or attributes. The application is
responsible for tracking the index or pointer of each child or attribute if it
needs to distinguish the type of the item.

@image html dashUML.png "DASH UML Diagram"
*/
